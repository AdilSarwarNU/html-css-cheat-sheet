body {
    font-family: 'Source Sans Pro', sans-serif;
    font-weight: normal;
    padding: 0;
    margin: 0;
}

ul, ol {
    margin: 0;
}

.title {
    font-size: 20pt;
}

.sheet {
    display: block;
}

/* Positioning */
.static {
    position: static;
}

.relative {
    position: relative;
}

.absolute {
    position: absolute;
}

.fixed {
    position: fixed;
}

/* Snippets explain a CSS property, HTML element, 
   or a single concept. */
.snippet {
    display: inline-block;
    vertical-align: top;
    margin: 16px;
    background-color: #eee;
}

.snippet.container {
    margin: 0;
    background-color: white;
    border: 2px solid #ccc;
    border-top: none;
}

h1, h2, h3, h4, h5, h6 {
    margin: 0;
    padding: 6px 12px;
}

section > h2, .snippet > h2 {
    background-color: cornflowerblue;
    color: white;
    font-size: 12pt;
    font-weight: normal;
}

section > h3, .snippet > h3, .requirement > h3 {
    font-size: 11pt;
    font-weight: normal;
    color: #777;
    background-color: initial;
}

code, .code, span.code {
    font-family: 'Source Code Pro', monospace;
    white-space: pre;
}

code, span.code {
    color: #222;
}

code {
    display: block;
    font-size: 14px;
}

.callout {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin: 16px 0;
}

#css-positioning-fixed {
    width: 500px;
    border: 4px double black;
}

.codeblock {
    padding: 16px 24px;
    overflow: scroll;
}

.codeblock.ex-header {
    margin: 8px;
    padding: 0;
}

.ex-header h1 {
    font-size: 2em;
}

.codeblock > hr {
    border-top: 1px dashed #999;
}

/* Formatting code in headers. Default header padding 
   makes code look too loose. */
.code.top {
    padding-bottom: 0;
}

.code.mid {
    padding-top: 0;
    padding-bottom: 0;
}

.code.bot {
    padding-top: 0;
}

code.comment {
    color: #bbb;
}

code.subtle {
    color: #888;
    font-size: 12px;
    padding: 4px;
}

section {
    display: block;
    padding: 0 0;
    margin: 0 0 0 10px;
}

.infill {
    display: inline-block;
    background-color: white;
}

.box, .bar, .content-box {
    background-color: #aaa;
    color: white;
}

.box.transform {
    line-height: 1.5em;
}

.box, .bar {
    font-family: 'Source Code Pro', monospace;
    display: inline-block;
    border-radius: 4px;
    min-height: 1.5em;
    text-align: center;
    vertical-align: middle;
}

.box.to-clear {
    padding: 8px;
}

.bar.vertical {
    min-height: 0;
    min-width: 1.5em;
}

.box {
    min-width: 1.5em;
    margin: 4px;
}

.box.padding {
    padding: 4px;
}

.absolute {
    position: absolute;
    left: auto;
    margin: 0;
}

.box.placeholder {
    background-color: white;
    color: #999;
}

.box.invisible {
    visibility: hidden;
    margin: 16px;
}

.box.bigger {
    font-size: 1.5em;
}

.box.biggest {
    font-size: 2em;
}

.box.flatter {
    min-height: 8px;
    margin: 2px;
}

.box.wider {
    min-width: 3em;
}

.fullwidth {
    min-width: 96%;
}

.box.nomargin {
    margin: 0;
}

.box.square {
    border-radius: 0;
}

.box.border.thick {
    border: 3px solid black;
}

/* Styles for creating figures related to the Box model */

.margin-box, .border-box, .padding-box, .content-box {
    padding: 1em; 
    padding-top: 0em; 
}

.border-box {
    background-color: lightgrey; 
}

.ex-margin {
    display: inline-block;
    border: 1px dashed #999;
}

.ex-padding {
    border: 1px dashed #999;
    margin: 0;
    position: relative;
}

.ex-padding, .padding-box {
    background-color: hsl(120, 20%, 75%); 
}

.padding-color {
    margin: 0;
}

.content-box {
    padding: 0.5em;
    text-indent: 0;
}

.margin-box, .ex-margin {
    background-color: hsla(50, 100%, 50%, 0.20);
}

.margin-box {
    text-indent: -0.75em;
}

.inline {
    display: inline;
    padding: 0;
    margin: 0;
}

.block {
    display: block;
}

.none {
    display: none;
}

.inline-block {
    display: inline-block;
    padding: 0;
    margin: 0;
}

.flex {
    border: 1px dashed #999;
    border-radius: 4px;
}

.positioned {
    border: 4px double black;
    border-radius: 4px;
}

.flex {
    display: flex;
}

.flex.noborder {
    border: none;
}

.flex.inline {
    display: inline-flex;
}

.valign-middle {
    vertical-align: middle;
}

.flex.row {
    /* override table .row */
    display: flex;
    flex-direction: row;
}

.flex.column {
    flex-direction: column;
}

.flex.row-reverse {
    flex-direction: row-reverse;
}

.flex.column-reverse {
    flex-direction: column-reverse;
}

.flex.wrap {
    flex-wrap: wrap;
}

.flex.nowrap {
    flex-wrap: nowrap;
    overflow: scroll;
}

.flex.wrap-reverse {
    flex-wrap: wrap-reverse;
}

.width-1 {
    width: 1em;
}

.width-2 {
    width: 2em;
}

.width-4 {
    width: 4em;
}

.width-8 {
    width: 8em;
}

.width-10 {
    width: 10em;
}

.width-12 {
    width: 12em;
}

.width-20 {
    width: 20em;
}

.width-30 {
    width: 30em;
}

.height-1 {
    height: 1em;
}

.height-2 {
    height: 2em;
}

.height-4 {
    height: 4em;
}

.height-6 {
    height: 6em;
}

.height-10 {
    height: 10em;
}

.height-15 {
    height: 15em;
}

.height-20 {
    height: 20em;
}

.height-30 {
    height: 30em;
}

.flex.taller {
    height: 4.5em;
}

.flex.tallest {
    height: 8em;
}

.flex.justify-start {
    justify-content: flex-start;
}

.flex.justify-center {
    justify-content: center;
}

.flex.justify-end {
    justify-content: flex-end;
}

.flex.justify-between {
    justify-content: space-between;
}

.flex.justify-around {
    justify-content: space-around;
}

.flex.align-start {
    align-items: flex-start;
}

.flex.align-center {
    align-items: center;
}

.flex.align-end {
    align-items: flex-end;
}

.flex.align-baseline {
    align-items: baseline;
}

.flex.align-stretch {
    align-items: stretch;
}

div.line:after, div.line-short:after {
    position: absolute;
    content: "";
    display: inline-block;
    border-top: 2px solid grey;
    width: 7em;
    margin-left: 8px;
}

div.line-short:after {
    width: 3.5em;
    /* margin-left: 12px; */
}

.flex.content-start {
    align-content: flex-start;
}

.flex.content-center {
    align-content: center;
}

.flex.content-end {
    align-content: flex-end;
}

.flex.content-between {
    align-content: space-between;
}

.flex.content-around {
    align-content: space-around;
}

.flex.content-stretch {
    align-content: stretch;
}

div.columns {
    display: flex;
    flex-wrap: wrap;
    flex-direction: row;
    justify-content: flex-start;
}

div.column {
    display: flex;
    flex-direction: column;
}

/* For the flexbox 'order' property snippet. */
.first, .second {
    order: 1;
}

.flex-basis-auto {
    flex-basis: auto;
}

.flex-basis-content {
    flex-basis: content;
}

.flex-basis-50px {
    flex-basis: 50px;
}

.flex-basis-50pct {
    flex-basis: 50%;
}

.flex-basis-100pct {
    flex-basis: 100%;
}

.grow-0 {
    flex-grow: 0;
}

.grow-1 {
    flex-grow: 1;
}

.grow-10 {
    flex-grow: 10;
}

.grow-20 {
    flex-grow: 20;
}

.grow-99 {
    flex-grow: 99;
}

.shrink-0 {
    flex-shrink: 0;
}

.shrink-1 {
    flex-shrink: 1;
}

.shrink-10 {
    flex-shrink: 10;
}

.shrink-20 {
    flex-shrink: 20;
}

.shrink-99 {
    flex-shrink: 99;
}

.align-self-start {
    align-self: flex-start;
}

.align-self-center {
    align-self: center;
}

.align-self-end {
    align-self: flex-end;
}

.align-self-baseline {
    align-self: baseline;
}

.align-self-stretch {
    align-self: stretch;
}

.font-example {
    display: inline-block;
    font-size: 32px;
}

a:link, a:visited {
    color: darkblue;
    text-decoration: none;
}

.nudge-top {
    padding-top: 10px;
}

.float-left {
    float: left;
}

.float-right {
    float: right;
}

.symbol {
    font-size: 22px;
}

.ex-overflow-box {
    display: inline-block;
    border: 1px dashed #999;
    width: 250px;
    height: 80px;
}

.ex-overflow-box.hidden {
    overflow: hidden;
}

.ex-overflow-box.scroll {
    overflow: scroll;
}

.ex-overflow-box.visible {
    overflow: visible;
}

.text-example {
    border-bottom: 1px dashed #999;
}

.ex-border-width {
    border-color: black;
    border-style: solid;
}

.ex-float, .ex-clear {
    width: 14em;
    border: 1px dashed #999;
    padding: 4px;
    display: inline-block;
    margin: 4px;
}

.ex-clear-row {
    display: flex;
    align-items: stretch;
}

.ex-border.dark, .ex-border.light {
    width: 1.5em;
    height: 1.5em;
    border-radius: 4px;
    background-color: white;
    border: 3px solid black;
}

.ex-border.light {
    background-color: transparent;
}

.ex-border-side {
    border: 3px solid black;
    border-radius: 0;
}

.ex-border-side.single {
    border-width: 0;
}

.table {
    display: table;
}

table {
    border-collapse: collapse;
    border-spacing: 0;
}

.ex-table, .ex-element, .ex-form, .ex-list, .ex-keyframe {
    border-bottom: 1px dashed #aaa;
    padding-left: 8px;
    padding-bottom: 8px;
}

.ex-full-table {
    background-color: initial;
}

.ex-full-table td {
    border: 2px solid black;
}

.ex-full-table th {
    width: 40%;
}

.row {
    display: table-row;
}

.center {
    text-align: center;
}

td {
    padding: 8px;
    height: 1em;
    width: 1em;
    text-align: center;
}

.row > .codeblock {
    display: table-cell;
}

table.border, tr.border, td.border {
    border: 2px solid black;
}

table.column-borders td + td {
    border-left: 2px solid black;
}

table.row-borders tr + tr {
    border-top: 2px solid black;
}

table.all-borders td {
    border: 2px solid black;
}

.ex-caption {
    /* padding: 12px 36px; */
    padding: 8px;
    border-bottom: 1px dashed #aaa;
}

.highlight-border {
    border: 2px solid red;
}

.highlight {
    background-color: #aaa;
}

.ex-vertical-align-cell {
    border: 2px solid black;
    width: 4em;
    height: 5em;
    text-align: center;
}

.cell > .codeblock {
    padding: 0 0 8px 0;
}

.ex-vertical-align-text {
    display: inline-block;
    border-bottom: 1px dashed #999;
}

.box.vertical {
    height: 4em;
    padding: 8px;
    margin: 0 8px;
}

span.base {
    vertical-align: baseline;
}

span.top {
    vertical-align: top;
}

span.middle {
    vertical-align: middle;
}

span.bottom {
    vertical-align: bottom;
}

span.sub {
    vertical-align: sub;
}

span.super {
    vertical-align: super;
}

.ex-align-box {
    display: inline-flex;
    align-items: center;
    min-width: 3em;
    min-height: 3em;
    background-color: #999;
    border-radius: 4px;
    margin: 4px;
    justify-content: center;
    text-align: center;
    color: white;
}

.ex-zindex {
    position: relative;
    height: 6em;
    border-bottom: 1px dashed #aaa;
}

.box-zindex {
    align-items: flex-end;
    background-color: #aaa;
    bottom: 30px;
    color: white;
    display: flex;
    height: 3em;
    justify-content: flex-end;
    left: 30px;
    padding: 4px;
    position: relative;
    width: 3em;
}

.box-zindex.placeholder {
    align-items: flex-start;
    font-size: 16px;
    left: 0;
    justify-content: flex-start;
    top: 0;
}

.stack {
    display: inline-flex;
    flex-direction: column;
    align-items: stretch;
}

.ex-full-table-elements {
    display: flex;
}

.ex-full-table-elements > code {
    padding-right: 36px;
}

.ex-full-table-elements th {
    border: 2px solid black;
}

.ex-css-element > code {
    font-family: 'Source Code Pro', monospace;
    font-weight: bold;
    font-size: 16px;
}

.ex-css-element {
    border-bottom: 1px dashed #999;
    padding: 0 0 8px 8px;
}

.ex-css {
    display: block;
    flex-wrap: wrap;
    max-width: 500px;
    justify-content: space-between;
}

.ps-link:link {
    background-color: yellow;
}

.ps-link:visited {
    background-color: #ccc;
}

.ps-link:hover {
    background-color: green;
}

.ps-link:active {
    background-color:red;
}

.ps-active:active {
    background-color: red;
}

.ps-hover:hover {
    background-color: green;
}

.ps-target, .ps-active, .ps-hover, .ps-plain {
    background-color: #ccc;
}

.ps-target:target {
    background-color: red;
}

.ex-pseudo {
    border-bottom: 1px dashed #999;
    padding-bottom: 8px;
}

.ex-pseudo > a {
    display: block;
    padding: 8px;
}

.ps-after::after {
    content: " The added content.";
    color: green;
}

.ps-before::before {
    content: " The added content.";
    color: green;
}

.underline {
    position: relative;
}

.underline::after {
    position: absolute;
    content: "";
    display: block;
    border-top: 1px solid green;
    width: 70%;
}

.overline {
    position: relative;
}

.overline::before {
    position: absolute;
    content: "";
    display: block;
    border-bottom: 1px solid green;
    width: 70%;
}

.animation:hover .box {
    animation: slideright 1s infinite linear;
}

.animation.alternate .box {
    animation-direction: alternate;
}

.animation.ex-animation-fill-mode:hover .box {
    animation: slideright 1s 1 1s, colorshift 1s 1 1s;
}

.animation:hover .fillmode-delay {
    animation: showblue 1s step-start;
}

.animation:hover .fillmode-animate {
    animation: showred 1s step-start 1s;    
}

.animation:hover .fillmode-end {
    animation: showblack 0.1s step-start 2s forwards;
}

.animation .fillmode-delay, .animation .fillmode-animate, .animation .fillmode-end {
    color: transparent;
}

.animation:hover .fillmode-initial {
    color: transparent;
}

.animation:hover .box.backgroundcolor {
    animation: showbackground 2s forwards;
}

.animation:hover .box.size {
    animation: growsize 2s forwards;
}

@keyframes slideright {
    from {
        margin-left: 0%;
    }
    to {
        margin-left: 80%;
    }
}

@keyframes colorshift {
    from {
        color: blue;
    }
    to {
        color: red;
    }
}

@keyframes showblue {
    to {
        color: blue;
    }
}
@keyframes showred {
    to {
        color: red;
    }
}

@keyframes showblack {
    to {
        color: black;
    }
}

@keyframes showbackground {
    from {
        background-color: blue;
    }
    to {
        background-color: red;
    }
}

@keyframes growsize {
    from {
        height: 1em;
        width: 1em;
    }
    to {
        height: 4em;
        width: 4em;
    }
}

nav > ul {
    position: fixed;
    list-style: none;
    min-width: 100px;
    background-color: hsla(0, 0%, 30%, 0.85);
    padding: 16px;
    width: 100%;
    z-index: 1000;
}

nav > ul > li {
    display: inline-block;
    margin: 0px 20px;
    color: white;
}

nav > ul > li.right {
    float: right;
    margin: 0 60px;
}

@media(max-width: 600px) {
    nav > ul > li.right {
        display: none;
    }
}


nav {
    padding-bottom: 75px;
    width: 100%;
}

nav a:link, nav a:visited {
    color: white;
    text-decoration: none;
}

:target:before {
    content: "";
    display: block;
    height: 60px;
    margin: -60px 0 0;
}

/* Example cursor animation */
.animation:hover .cursor {
    animation: cursor 0.8s infinite step-end;
}

.cursor {
    height: 80px; 
    border-left: 8px solid black;
}

@keyframes cursor {
    50% {
        border-color: transparent;
    }
}

.animation:hover .animated {
    animation-iteration-count: infinite;
    animation-duration: 1.5s;
}

.ex-transform {
    display: inline-block;
    position: relative;
    perspective: 100px;
}

.ex-transform.lr-border {
    border: dashed black;
    border-width: 0 1px;
    border-radius: 0;
}

.ex-transform.tb-border {
    border: dashed black;
    border-width: 1px 0;
    border-radius: 0;
}

.ex-translate {
    width: 60px;
    height: 60px;
    border: 1px solid black;
    perspective: 60px;
    perspective-origin: top left;
}

.ex-perspective {
    height: 80px;
    width: 50px;
    position: relative;
}

.ex-perspective {
    margin: 10px 0 -25px 10px;
}

.ex-perspective.right-bottom {
    perspective-origin: 300% 200%;
    /* margin: 30px 0 -20px 30px; */
}

.ex-perspective.left-bottom {
    perspective-origin: -300% 200%;
    /* margin: 20px; */
    /* margin-top: 30px; */
    /* margin-bottom: -20px; */
}

.ex-perspective.center {
    perspective-origin: 50% 50%;
    /* margin: 10px 0 -30px 25px; */
    margin: 0 0 -30px 0;
}

.ex-perspective.right-top {
    perspective-origin: 300% -200%;
    /* margin: 25px 15px 0px 30px; */
}

.ex-perspective.left-top {
    perspective-origin: -300% -200%;
    /* margin: 20px; */
    /* margin-bottom: 0; */ 
}

.cube {
    perspective: 400px;
    transform-style: preserve-3d;
    backface-visibility: visible;
}

.face {
    position: absolute;
    width: 40px;
    height: 40px;
    color: white;
    line-height: 40px;
    font-size: 2em;
    text-align: center;
}

.face.front {
    transform: translateZ(20px);
    background-color: rgba(30%, 30%, 30%, 0.7);
}

.face.top {
    transform: rotateX(90deg) translateZ(20px);
    background-color: rgba(0%, 100%, 0%, 0.7);;
}

.face.right {
    transform: rotateY(90deg) translateZ(20px);
    background-color: rgba(0%, 0%, 100%, 0.7);;
}

.face.left {
    transform: rotateY(-90deg) translateZ(20px);
    background-color: rgba(100%, 0%, 0%, 0.7);
}

.face.bottom {
    transform: rotateX(-90deg) translateZ(20px);
    background-color: rgba(100%, 0%, 100%, 0.7);
}

.face.back {
    transform: rotateY(180deg) translateZ(20px);
    background-color: rgba(25%, 50%, 75%, 0.7);
}

table.transform-origin {
    margin: 16px 0 16px 16px;
}

table.perspective .codeblock {
    overflow: hidden;
    padding: 8px 16px;
}

.ex-transform-origin {
    border: 1px solid gray;
    display: inline-block;
    perspective: 100px;
    margin-bottom: 10px;
}

.transform-origin .codeblock {
    padding: 16px 16px 0 12px;
}

table.transform-origin > caption {
    margin-left: 15%;
}

.door {
    height: 40px;
    width: 40px;
    background-color: #aaa;
    color: white;
    line-height: 40px;
    text-align: center;
    font-size: 2em;
}

.door.rotate-y  { transform: rotateY(60deg); }
.door.rotate-y2 { transform: rotateY(-60deg); }
.door.rotate-x  { transform: rotateX(60deg); }
.door.rotate-x2 { transform: rotateX(-60deg); }
.door.rotate-z  { transform: rotateZ(45deg); }

.transform-origin td {
    text-align: left;
}

.ex-card:hover .card {
    transform: rotateY(180deg) translate(100%);
}

.ex-card {
    perspective: 300px;
}

.card {
    width: 100px;
    height: 100px;
    background-color: #aaa;
    color: white;
    line-height: 100px;
    transform: rotateY(0) translate(0);
    transition: all 0.7s;
}

.card-front, .card-back {
    width: 100%;
    height: 100%;
    text-align: center;
    font-size: 2em;
}

.card {
    transform-style: preserve-3d;
    transform-origin: right;
    position: relative;
}

.card-front, .card-back {
    backface-visibility: hidden;
    position: absolute;
}

.card-back {
    transform: rotateY(180deg) translateZ(1px);
    background-color: purple;
}
